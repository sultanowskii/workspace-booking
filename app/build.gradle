/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'org.openapi.generator' version '7.10.0'

    id 'com.diffplug.spotless' version '6.25.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web:3.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.3'
    implementation 'org.springframework:spring-web:6.1.12'
    implementation 'org.springframework:spring-webmvc:6.1.12'

    // Persistence
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.postgresql:postgresql:42.7.3'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
	testCompileOnly 'org.projectlombok:lombok:1.18.34'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.3'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

    // OpenAPI
    implementation 'org.openapitools:openapi-generator:7.10.0'
    implementation 'org.openapitools:openapi-generator-gradle-plugin:7.10.0'

    // JSON
    implementation 'org.mapstruct:mapstruct:1.6.1'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.1'

    // This dependency is used by the application.
    implementation libs.guava
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'org.wb.App'
}

final OPENAPI_OUTPUT_BASE_DIR = "${projectDir}"
final OPENAPI_OUTPUT_PACKAGE = "gen"
final OPENAPI_OUTPUT_DIR = "${OPENAPI_OUTPUT_BASE_DIR}/src/main/java/org/wb/${OPENAPI_OUTPUT_PACKAGE}"
final OPENAPI_SPEC = "${rootDir}/api/openapi.yaml"

task openApiClean(type: Delete) {
    outputs.upToDateWhen { false }

    doFirst {
        println "Cleaning up previously generated code ${OPENAPI_OUTPUT_DIR}"
    }
    delete("${OPENAPI_OUTPUT_DIR}")
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "${OPENAPI_SPEC}"
    outputDir = "${OPENAPI_OUTPUT_BASE_DIR}"
    apiPackage = "org.wb.gen.api"
    modelPackage = "org.wb.gen.model"
    configOptions = [
        interfaceOnly: "true",
        openApiNullable: "false",
        skipDefaultInterface: "true",
        useSpringBoot3: "true",
        useSpringController: "true",
        hideGenerationTimestamp: "true"
    ]
    globalProperties = [
        apis: "",
        models: ""
    ]
}

openApiValidate {
    inputSpec = "${OPENAPI_SPEC}"
}

spotless {
    java {
        // It works, but openapi-generator uses wildcard (.*) imports.
        // These imports couldn't be checked by spotless :(
        removeUnusedImports()
    }
}

task openapi {
    dependsOn tasks.openApiValidate
    dependsOn tasks.openApiClean
    dependsOn tasks.openApiGenerate
}

openapi.finalizedBy spotlessJava, spotlessApply
